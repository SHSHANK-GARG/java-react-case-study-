[{"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\index.js":"1","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\App.js":"2","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Login.js":"3","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\TrainList.js":"4","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Header.js":"5","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Showcase.js":"6","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Footer.js":"7","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Destinations.js":"8","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Search.js":"9","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Error.js":"10","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\AddTrain.js":"11","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Booking.js":"12","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\UserRegister.js":"13","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\BookingList.js":"14","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\UserLogin.js":"15","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\PaymentForm.js":"16","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\Services\\SearchService.js":"17","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\Services\\PaymentService.js":"18","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\Services\\BookService.js":"19"},{"size":263,"mtime":1641409009000,"results":"20","hashOfConfig":"21"},{"size":1968,"mtime":1653929588110,"results":"22","hashOfConfig":"21"},{"size":3617,"mtime":1641409009000,"results":"23","hashOfConfig":"21"},{"size":5559,"mtime":1641409009000,"results":"24","hashOfConfig":"21"},{"size":788,"mtime":1641409009000,"results":"25","hashOfConfig":"21"},{"size":424,"mtime":1641409009000,"results":"26","hashOfConfig":"21"},{"size":496,"mtime":1641409009000,"results":"27","hashOfConfig":"21"},{"size":1974,"mtime":1641409009000,"results":"28","hashOfConfig":"21"},{"size":5413,"mtime":1641409009000,"results":"29","hashOfConfig":"21"},{"size":305,"mtime":1641409009000,"results":"30","hashOfConfig":"21"},{"size":9635,"mtime":1641409009000,"results":"31","hashOfConfig":"21"},{"size":6739,"mtime":1641409009000,"results":"32","hashOfConfig":"21"},{"size":6428,"mtime":1641409009000,"results":"33","hashOfConfig":"21"},{"size":4651,"mtime":1641409009000,"results":"34","hashOfConfig":"21"},{"size":3038,"mtime":1641409009000,"results":"35","hashOfConfig":"21"},{"size":3430,"mtime":1641409009000,"results":"36","hashOfConfig":"21"},{"size":1094,"mtime":1641409009000,"results":"37","hashOfConfig":"21"},{"size":246,"mtime":1641409009000,"results":"38","hashOfConfig":"21"},{"size":233,"mtime":1641409009000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1afy11n",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\index.js",[],["88","89"],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\App.js",[],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Login.js",["90","91","92","93","94","95"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component, useContext, useState, Fragment } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport \"./Login.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure()\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"username is required!\"),\n});\n\nconst Login = () => {\n   \n   /**To Show Add Toastify Text */\n   const notify = () => {\n    toast.success(\"Admin LoggedIn Successfully!!!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n    });\n  };\n  \n  /**To Show Error Toastify Text */\n  const error = () =>\n  {\n    toast.error(\"Invalid Credentials!!!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n    });\n  };\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n  const fromUrl = _get(location, \"state.from.pathname\");\n  const signInSuccess = (userData) => {\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/adminTrainList\");\n    }\n  };\n\n  const signInFailure = (userData) => {\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  const login = (userData) => {\n    fetch(\"http://localhost:8682/auth\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({\n        username: userData.username,\n        password: userData.password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(\"your userId and password is not correct\");\n        } else {\n          const userData = {\n            token: response,\n            name: username,\n          };\n          if(response.response === ' Invalid Credentials..!')\n          {\n            signInFailure(userData);\n            error();\n          }\n        else{\n           signInSuccess(userData);\n           notify();\n        }\n          console.log(response);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        password: \"\",\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = { ...values };\n          resetForm();\n          // notify();\n          login(userData);\n        } catch (err) {\n          // error();\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form>\n           <div className=\"booking-container\">\n           <h1 className=\"booking\">ADMIN LOGIN</h1>\n           <hr></hr>\n            <div className=\"inner\">\n              <label><b>User Name</b></label>\n              <Field name=\"username\" type=\"text\" placeholder=\"Enter username\" />\n              <label><b>Password</b></label>\n              <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n              <button\n                className=\"btn btn-success\"\n                type=\"submit\"\n                onClick={() => {}}\n              >\n                Sign In\n              </button>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default Login;","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\TrainList.js",["96"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport AddTrain from \"./components/AddTrain\";\nimport SearchService from \"./Services/SearchService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nconst TrainList = () => {\n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success(\"Train Updated Successfully\", {\n      position: \"top-center\",\n      autoClose: 3000,\n    });\n  };\n  /**To Show Delete Toastify Text */\n  const showdelete = () => {\n    toast.error(\"Train Deleted\", {\n      position: \"top-center\",\n      autoClose: 3000,\n    });\n  };\n  const [Trains, setTrains] = useState([]);\n  useEffect(() => {\n    getAllTrains();\n  }, []);\n\n  const getAllTrains = () => {\n    SearchService.getAllTrains()\n      .then((response) => {\n        setTrains(response.data);\n        console.log(response.date);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const deleteTrain = (trainNo) => {\n    SearchService.deleteTrain(trainNo)\n      .then((response) => {\n        getAllTrains();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <div class=\"container \">\n      <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\n        <div class=\"row \">\n          <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\n            <div className=\"search\">\n              <form class=\"form-inline\">\n                <input\n                  class=\"form-control mr-sm-2\"\n                  type=\"search\"\n                  placeholder=\"Search Train\"\n                  aria-label=\"Search\"\n                />\n              </form>\n            </div>\n          </div>\n          <div\n            class=\"col-sm-3 offset-sm-2 mt-5 mb-4 text-gred\"\n            style={{ color: \"#D2691E\" }}\n          >\n            <h2>\n              <b>TRAIN DETAILS</b>\n            </h2>\n          </div>\n          <div class=\"col-sm-3 offset-sm-1  mt-5 mb-4 text-gred\">\n            <Link to=\"/addTrain\">\n              <Button variant=\"primary\" onClick={handleShow}>\n                Add Train\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"table-responsive \">\n            <table class=\"table table-striped table-hover table-bordered\">\n              <thead>\n                <tr>\n                  <th>TrainNo </th>\n                  <th>TrainName </th>\n                  <th>SourceStation </th>\n                  <th>DestinationStation </th>\n                  <th>ArrivalTime </th>\n                  <th>DepartureTime </th>\n                  <th>Duration </th>\n                  <th>NoOfSeats </th>\n                  <th>FirstClass </th>\n                  <th>SecondClass </th>\n                  <th>ThirdClass </th>\n                  <th>Sleeper </th>\n                  <th>Actions </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Trains.map((TrainDetails) => (\n                  <tr key={TrainDetails.trainNo}>\n                    <td> {TrainDetails.trainNo} </td>\n                    <td> {TrainDetails.trainName} </td>\n                    <td> {TrainDetails.sourceStation} </td>\n                    <td>{TrainDetails.destinationStation}</td>\n                    <td>{TrainDetails.arrivalTime}</td>\n                    <td>{TrainDetails.deptTime}</td>\n                    <td>{TrainDetails.duration}</td>\n                    <td>{TrainDetails.noOfSeats}</td>\n                    <td> {TrainDetails.firstClassACFare} </td>\n                    <td> {TrainDetails.twoTierAcFare} </td>\n                    <td> {TrainDetails.threeTierAcFare} </td>\n                    <td> {TrainDetails.sleeperFare} </td>\n                    <td>\n                      <Link\n                        className=\"btn btn-info\"\n                        to={`/edit-train/${TrainDetails.trainNo}`}\n                      >\n                        {\" \"}\n                        Update{\" \"}\n                      </Link>\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => {\n                          deleteTrain(TrainDetails.trainNo);\n                          showdelete();\n                        }}\n                        style={{ marginLeft: \"2px\", marginTop: \"5px\" }}\n                      >\n                        Delete{\" \"}\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* <!--- Model Box ---> */}\n        <div className=\"model_box\">\n          <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>Add Train</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <AddTrain />\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          {/* Model Box Finish*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrainList;\n","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Header.js",[],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Showcase.js",[],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Footer.js",[],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Destinations.js",[],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Search.js",["97","98","99"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchService from \"../Services/SearchService\";\nimport \"./Search.css\";\n\nconst Search = () => {\n  const [Trains, setTrains] = useState([]);\n  const [sourceStation, setsourceStation] = useState(\"\");\n  const [destinationStation, setdestinationStation] = useState(\"\");\n\n  const searchTrain = (e) => {\n    e.preventDefault();\n\n    SearchService.getTrainsByRoute(sourceStation, destinationStation)\n      .then((response) => {\n        var e = JSON.stringify(response.data);\n        console.log(response);\n        setTrains(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <form>\n      <div className=\"search-container\">\n        <h1 className=\"searching\">SEARCH TRAINS</h1>\n        <hr></hr>\n        <div className=\"form-searching\">\n          <input\n            type=\"text\"\n            name=\"sourceStation\"\n            id=\"sourceStation\"\n            placeholder=\"Enter Start Station\"\n            value={sourceStation}\n            onChange={(e) => setsourceStation(e.target.value)}\n            required\n          ></input>\n\n          <input\n            type=\"text\"\n            placeholder=\"Enter End Station\"\n            name=\"destinationStation\"\n            id=\"destinationStation\"\n            value={destinationStation}\n            onChange={(e) => setdestinationStation(e.target.value)}\n            required\n          ></input>\n          <hr></hr>\n          <button className=\"btn btn-success\" onClick={(e) => searchTrain(e)}>\n            Search Trains\n          </button>\n        </div>\n      </div>\n      <div class=\"container \">\n        <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\n          <div class=\"row \">\n            <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\n              <div className=\"search\">\n                <form class=\"form-inline\">\n                  <input\n                    class=\"form-control mr-sm-2\"\n                    type=\"search\"\n                    placeholder=\"Search Train\"\n                    aria-label=\"Search\"\n                  />\n                </form>\n              </div>\n            </div>\n            <div\n              class=\"col-sm-3 offset-sm-2 mt-5 mb-4 text-gred\"\n              style={{ color: \"#D2691E\" }}\n            >\n              <h3>\n                <b>LIST OF TRAINS AVAILABLE</b>\n              </h3>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"table-responsive \">\n              <table class=\"table table-striped table-hover table-bordered\">\n                <thead>\n                  <tr>\n                    <th>TrainNo </th>\n                    <th>TrainName </th>\n                    <th>SourceStation </th>\n                    <th>DestinationStation </th>\n                    <th>ArrivalTime </th>\n                    <th>DepartureTime </th>\n                    <th>Duration </th>\n                    <th>NoOfSeats </th>\n                    <th>FirstClass </th>\n                    <th>SecondClass </th>\n                    <th>ThirdClass </th>\n                    <th>Sleeper </th>\n                    <th>Actions </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Trains.map((TrainDetails) => (\n                    <tr key={TrainDetails.trainNo}>\n                      <td> {TrainDetails.trainNo} </td>\n                      <td> {TrainDetails.trainName} </td>\n                      <td> {TrainDetails.sourceStation} </td>\n                      <td>{TrainDetails.destinationStation}</td>\n                      <td>{TrainDetails.arrivalTime}</td>\n                      <td>{TrainDetails.deptTime}</td>\n                      <td>{TrainDetails.duration}</td>\n                      <td>{TrainDetails.noOfSeats}</td>\n                      <td> {TrainDetails.firstClassACFare} </td>\n                      <td> {TrainDetails.twoTierAcFare} </td>\n                      <td> {TrainDetails.threeTierAcFare} </td>\n                      <td> {TrainDetails.sleeperFare} </td>\n                      <td>\n                        {\" \"}\n                        <Link className=\"btn btn-info\" to=\"/booking\">\n                          {\" \"}\n                          Book{\" \"}\n                        </Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* <!--- Model Box ---> */}\n          <div className=\"model_box\">\n            <Modal\n              show={show}\n              onHide={handleClose}\n              backdrop=\"static\"\n              keyboard={false}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title></Modal.Title>\n              </Modal.Header>\n              <Modal.Body></Modal.Body>\n\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n\n            {/* Model Box Finish*/}\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Search;\n","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Error.js",[],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\AddTrain.js",["100","101"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport SearchService from \"../Services/SearchService.js\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nconst AddTrain = () => {\n  /**To Show Add Train Toastify Text */\n  const notify = () => {\n    toast(\"Train Added Successfully\", {\n      position: \"top-center\",\n      autoClose: 3000,\n    });\n  };\n  const [trainNo, settrainNo] = useState(\"\");\n  const [trainName, settrainName] = useState(\"\");\n  const [sourceStation, setsourceStation] = useState(\"\");\n  const [destinationStation, setdestinationStation] = useState(\"\");\n  const [arrivalTime, setarrivalTime] = useState(\"\");\n  const [deptTime, setdeptTime] = useState(\"\");\n  const [duration, setduration] = useState(\"\");\n  const [noOfSeats, setnoOfSeats] = useState(\"\");\n  const [firstClassACFare, setfirstClassACFare] = useState(\"\");\n  const [twoTierAcFare, settwoTierAcFare] = useState(\"\");\n  const [threeTierAcFare, setthreeTierAcFare] = useState(\"\");\n  const [sleeperFare, setsleeperFare] = useState(\"\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const saveOrUpdateTrains = (e) => {\n    e.preventDefault();\n    const TrainDetails = {\n      trainNo,\n      trainName,\n      sourceStation,\n      destinationStation,\n      arrivalTime,\n      deptTime,\n      duration,\n      noOfSeats,\n      firstClassACFare,\n      twoTierAcFare,\n      threeTierAcFare,\n      sleeperFare,\n    };\n    if (id) {\n      SearchService.updateTrain(id, TrainDetails)\n        .then((response) => {\n          alert(\"Your Train has been updated\");\n          history.push(\"/adminTrainList\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      SearchService.addTrain(TrainDetails)\n        .then((response) => {\n          alert(\"Your Train has been Added\");\n          history.push(\"/adminTrainList\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n  useEffect(() => {\n    SearchService.getTrainById(trainNo)\n      .then((response) => {\n        settrainNo(response.data.trainNo);\n        settrainName(response.data.trainName);\n        setsourceStation(response.data.sourceStation);\n        setdestinationStation(response.data.destinationStation);\n        setarrivalTime(response.data.arrivalTime);\n        setdeptTime(response.data.deptTime);\n        setduration(response.data.duration);\n        setnoOfSeats(response.data.noOfSeats);\n        setfirstClassACFare(response.data.firstClassACFare);\n        settwoTierAcFare(response.data.twoTierAcFare);\n        setthreeTierAcFare(response.data.threeTierAcFare);\n        setsleeperFare(response.data.sleeperFare);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const title = () => {\n    if (id) {\n      return <h2 className=\"text-center\">Update Train</h2>;\n    } else {\n      return <h2 className=\"text-center\">Add Train</h2>;\n    }\n  };\n  return (\n    <div>\n      <br></br>\n      <br></br>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n            {title()}\n            <div className=\"card-body\">\n              <form>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">TrainNo</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Train Number\"\n                    name=\"trainNo\"\n                    className=\"form-control\"\n                    value={trainNo}\n                    onChange={(e) => settrainNo(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Train Name</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Train Name\"\n                    name=\"trainName\"\n                    className=\"form-control\"\n                    value={trainName}\n                    onChange={(e) => settrainName(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Source Station</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter start point\"\n                    name=\"sourceStation\"\n                    className=\"form-control\"\n                    value={sourceStation}\n                    onChange={(e) => setsourceStation(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Destination Station</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter end point\"\n                    name=\"destinationStation\"\n                    className=\"form-control\"\n                    value={destinationStation}\n                    onChange={(e) => setdestinationStation(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">ArrivalTime</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Arrival Time\"\n                    name=\"arrivalTime\"\n                    className=\"form-control\"\n                    value={arrivalTime}\n                    onChange={(e) => setarrivalTime(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">DeptTime</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Departure Time\"\n                    name=\"deptTime\"\n                    className=\"form-control\"\n                    value={deptTime}\n                    onChange={(e) => setdeptTime(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Duration</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Duration\"\n                    name=\"duration\"\n                    className=\"form-control\"\n                    value={duration}\n                    onChange={(e) => setduration(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">NoOfSeats</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Number of seats\"\n                    name=\"noOfSeats\"\n                    className=\"form-control\"\n                    value={noOfSeats}\n                    onChange={(e) => setnoOfSeats(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">firstClassACFare</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter FirstClass AC Fare\"\n                    name=\"firstClassACFare\"\n                    className=\"form-control\"\n                    value={firstClassACFare}\n                    onChange={(e) => setfirstClassACFare(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">TwoTierAcFare</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter TwoTier AC Fare\"\n                    name=\"twoTierAcFare\"\n                    className=\"form-control\"\n                    value={twoTierAcFare}\n                    onChange={(e) => settwoTierAcFare(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">ThreeTierAcFare</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter ThreeTier AC Fare\"\n                    name=\"threeTierAcFare\"\n                    className=\"form-control\"\n                    value={threeTierAcFare}\n                    onChange={(e) => setthreeTierAcFare(e.target.value)}\n                  ></input>\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">sleeperFare</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter SleeperFare\"\n                    name=\"sleeperFare\"\n                    className=\"form-control\"\n                    value={sleeperFare}\n                    onChange={(e) => setsleeperFare(e.target.value)}\n                  ></input>\n                </div>\n                <Link\n                  onClick={(e) => {\n                    saveOrUpdateTrains(e);\n                  }}\n                  to=\"/adminTrainList\"\n                  className=\"btn btn-success\"\n                >\n                  {\" \"}\n                  Submit{\" \"}\n                </Link>\n                <Link to=\"/adminTrainList\" className=\"btn btn-danger\">\n                  {\" \"}\n                  Cancel{\" \"}\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTrain;\n","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\Booking.js",["102","103","104","105","106","107","108"],"import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport BookService from \"../Services/BookService\";\nimport { Button, Modal, Input } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./Booking.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nconst Booking = () => {\n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success({\n      position: \"top-center\",\n      autoClose: false,\n    });\n  };\n  const [id, setid] = useState(\"\");\n  const [name, setname] = useState(\"\");\n  const [age, setage] = useState(\"\");\n  const [sex, setsex] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [trainNo, settrainNo] = useState(\"\");\n  const [trainName, settrainName] = useState(\"\");\n  const [sourceStation, setsourceStation] = useState(\"\");\n  const [destinationStation, setdestinationStation] = useState(\"\");\n  const [classType, setclassType] = useState(\"\");\n  const [adults, setadults] = useState(\"\");\n  const [children, setchildren] = useState(\"\");\n  const [payment, setpayment] = useState(\"\");\n  const [pnrNo, setpnrNo] = useState(\"\");\n  const history = useHistory();\n\n  const bookTrain = (e) => {\n    e.preventDefault();\n    const UserDetails = {\n      id,\n      name,\n      age,\n      sex,\n      address,\n      trainNo,\n      trainName,\n      sourceStation,\n      destinationStation,\n      classType,\n      adults,\n      children,\n      pnrNo,\n      payment,\n    };\n\n    BookService.bookTrain(UserDetails)\n      .then((response) => {\n        var e = JSON.stringify(response.data);\n        alert(e);\n        console.log(response);\n        history.push(\"/booking\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return (\n    <form>\n      <div className=\"booking-container\">\n        <h1 className=\"booking\">BOOKING FORM</h1>\n        <hr></hr>\n        <p className=\"instruction\">\n          Please fill in this form to book a train ticket.\n        </p>\n        <div className=\"form-booking\">\n          <label>\n            <b>Name</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Enter Your Name\"\n            required\n            value={name}\n            onChange={(e) => setname(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Age</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"Age\"\n            id=\"age\"\n            placeholder=\"Enter Your Age\"\n            required\n            value={age}\n            onChange={(e) => setage(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Gender</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"sex\"\n            id=\"sex\"\n            placeholder=\"Enter Your Gender\"\n            required\n            value={sex}\n            onChange={(e) => setsex(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Address</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"address\"\n            id=\"address\"\n            placeholder=\"Enter Your Address\"\n            required\n            value={address}\n            onChange={(e) => setaddress(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Train No</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"trainNo\"\n            id=\"trainNo\"\n            placeholder=\"Enter Your TrainNo\"\n            required\n            value={trainNo}\n            onChange={(e) => settrainNo(e.target.value)}\n          ></input>\n\n          <label>\n            <b>Train Name</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"trainName\"\n            id=\"trainName\"\n            placeholder=\"Enter Your TrainName\"\n            required\n            value={trainName}\n            onChange={(e) => settrainName(e.target.value)}\n          ></input>\n\n          <label for=\"sourceStation\">\n            <b>Source Station</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"sourceStation\"\n            id=\"sourceStation\"\n            placeholder=\"Enter Your SourceStation\"\n            required\n            value={sourceStation}\n            onChange={(e) => setsourceStation(e.target.value)}\n          ></input>\n\n          <label for=\"destinationStation\">\n            <b>Destination Station</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"destinationStation\"\n            id=\"destinationStation\"\n            placeholder=\"Enter Your DestinationStation\"\n            required\n            value={destinationStation}\n            onChange={(e) => setdestinationStation(e.target.value)}\n          ></input>\n\n          <label for=\"classType\">\n            <b>ClassType</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"classType\"\n            id=\"classType\"\n            placeholder=\"Enter Your ClassType\"\n            required\n            value={classType}\n            onChange={(e) => setclassType(e.target.value)}\n          ></input>\n\n          <label for=\"adults\">\n            <b>Adults</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"adults\"\n            id=\"adults\"\n            placeholder=\"Enter Your Adults\"\n            required\n            value={adults}\n            onChange={(e) => setadults(e.target.value)}\n          ></input>\n\n          <label for=\"children\">\n            <b>Children</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"children\"\n            id=\"children\"\n            placeholder=\"Enter Your Children\"\n            required\n            value={children}\n            onChange={(e) => setchildren(e.target.value)}\n          ></input>\n\n          <label for=\"payment\">\n            <b>Payment</b>\n          </label>\n          <input\n            type=\"text\"\n            name=\"payment\"\n            id=\"payment\"\n            placeholder=\"Enter Your Payment\"\n            required\n            value={payment}\n            onChange={(e) => setpayment(e.target.value)}\n          ></input>\n\n          <hr></hr>\n          <Link\n            className=\"btn btn-success\"\n            onClick={(e) => {\n              bookTrain(e);\n            }}\n          >\n            BOOK{\" \"}\n          </Link>\n          <button type=\"submit\" className=\"btn btn-danger\">{\" \"}Cancel{\" \"}</button>\n          <Link className=\"btn btn-info\" to=\"/payment\">\n            {\" \"}\n            Proceed To Payment{\" \"}\n          </Link>\n          <ToastContainer />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Booking;\n","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\UserRegister.js",["109"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./UserRegister.css\";\nimport userregister from '../assets/userregister.png';\nimport {ToastContainer,toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure()\n\n  /**To Show Add Toastify Text */\n  const notify = ()=>{\n    toast.success('User Added Successfully!!',\n    {\n        position: \"top-center\",\n        autoClose:3000\n    });\n\n}\n\nexport default class UserRegister extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      emailId: \"\",\n      contact: \"\",\n      username: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      nameError: \"\",\n      emailIdError: \"\",\n      contactError: \"\",\n      usernameError: \"\",\n      passwordError: \"\",\n      confirmpasswordError: \"\",\n    };\n    this.register = this.register.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  valid() {\n    if (\n      this.state.name.length < 4 &&\n      this.state.emailId.length < 6 &&\n      this.state.contact.length <= 10 &&\n      this.state.username.length < 6 &&\n      this.state.password.length < 6 &&\n      this.state.confirmpassword.length < 6\n    ) {\n      this.setState({\n        nameError: \"Invalid Name\",\n        emailIdError: \"Please Enter a Valid Email Id\",\n        contactError: \"Please Enter 10 Digit Mobile Number\",\n        usernameError: \"UserName length shoud be more than 6\",\n        passwordError: \"Password length should be more than 6\",\n        confirmpasswordError: \"Password length should be more than 6\",\n      });\n    } else if (this.state.name.length < 1) {\n      this.setState({\n        nameError: \"Name length should be more than 1\",\n      });\n    } else if (this.state.emailId.length < 9) {\n      this.setState({\n        emailIdError: \"Email length should be more than 8\",\n      });\n    } else if (this.state.contact.length < 9) {\n      this.setState({\n        contactError: \"Mobile number should be 10 digits\",\n      });\n    } else if (this.state.username.length < 4) {\n      this.setState({\n        usernameError: \"Invalid Username\",\n      });\n    } else if (this.state.password.length < 6) {\n      this.setState({\n        passwordError: \"Password length should be more than 6\",\n      });\n    } else if (this.state.confirmpassword.length < 6) {\n      this.setState({\n        confirmpasswordError: \"Password length should be more than 6\",\n      });\n    } else {\n      return true;\n    }\n  }\n\n  register(e) {\n    this.setState({\n      nameError: \"\",\n      emailIdError: \"\",\n      contactError: \"\",\n      usernameError: \"\",\n      passwordError: \"\",\n      confirmpasswordError: \"\",\n    });\n    e.preventDefault();\n    if (this.valid()) {\n      fetch(\"http://localhost:8082/user/signup\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          emailId: this.state.emailId,\n          contact: this.state.contact,\n          username: this.state.username,\n          password: this.state.password,\n          confirmpassword: this.state.confirmpassword,\n        }),\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          alert(\"Your Registration Is Successfully Added!!\");\n        })\n        .catch((err) => {\n          notify();\n        });\n    }\n  }\n\n  handleChange(changeObject) {\n    this.setState(changeObject);\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"userlogin-container\">\n          <h2 className=\"user-panel\">USER REGISTRATION</h2>\n          <hr></hr>\n          <div className=\"userregisterform\">\n            <label><b>Name</b></label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter name\"\n              onChange={(e) => this.handleChange({ name: e.target.value })}\n            />\n            <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\n          </div>\n\n          <div className=\"userregisterform\">\n            <label><b>Email</b></label>\n            <input\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={(e) => this.handleChange({ emailId: e.target.value })}\n            />\n            <p style={{ color: \"red\" }}>{this.state.emailIdError}</p>\n          </div>\n\n          <div className=\"userregisterform\">\n            <label><b>Contact</b></label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter contact\"\n              onChange={(e) => this.handleChange({ contact: e.target.value })}\n            />\n            <p style={{ color: \"red\" }}>{this.state.contactError}</p>\n          </div>\n\n          <div className=\"userregisterform\">\n            <label><b>UserName</b></label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter username\"\n              onChange={(e) => this.handleChange({ username: e.target.value })}\n            />\n            <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\n          </div>\n\n          <div className=\"userregisterform\">\n            <label><b>Password</b></label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter password\"\n              onChange={(e) => this.handleChange({ password: e.target.value })}\n            />\n            <p style={{ color: \"red\" }}>{this.state.passwordError}</p>\n          </div>\n\n          <div className=\"userregisterform\">\n            <label><b>Confirm Password</b></label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter confirm password\"\n              onChange={(e) =>\n                this.handleChange({ confirmpassword: e.target.value })\n              }\n            />\n            <p style={{ color: \"red\" }}>{this.state.confirmpasswordError}</p>\n          </div>\n          <div className=\"userregisterform\">\n            <Link\n              type=\"submit\"\n              className=\"btn btn-success\"\n              to=\"/search\"\n              onClick={(e) => {this.register(e);}}\n            >\n              Register\n            </Link>\n            <ToastContainer/>\n          </div>\n          {/* <p>\n              Have an account? <Link to=\"/login\">Login Here</Link>\n            </p> */}\n        </div>\n      </form>\n    );\n  }\n}\n","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\BookingList.js",["110","111","112","113"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal, Input } from \"react-bootstrap\";\nimport SearchService from \"../Services/SearchService\";\nimport {ToastContainer,toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure()\n\n  const BookingList = () => {\n   \n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success(\"Train Updated Successfully\", {\n      position: \"top-center\",\n      autoClose: 3000,\n    });\n  };\n\n  const [Trains, setTrains] = useState([]);\n  useEffect(() => {\n    getAllTrains();\n  }, []);\n\n  const getAllTrains = () => {\n    SearchService.getAllTrains()\n      .then((response) => {\n        setTrains(response.data);\n        console.log(response.date);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const deleteTrain = (trainNo) => {\n    SearchService.deleteTrain(trainNo)\n      .then((response) => {\n        alert(\"Your Train has been Deleted\");\n        getAllTrains();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <div class=\"container \">\n      <div className=\"crud shadow-lg p-3 mb-5 mt-5 bg-body rounded\">\n        <div class=\"row \">\n          <div class=\"col-sm-3 mt-5 mb-4 text-gred\">\n            <div className=\"search\">\n              <form class=\"form-inline\">\n                <input\n                  class=\"form-control mr-sm-2\"\n                  type=\"search\"\n                  placeholder=\"Search Train\"\n                  aria-label=\"Search\"\n                />\n              </form>\n            </div>\n          </div>\n          <div\n            class=\"col-sm-3 offset-sm-2 mt-5 mb-4 text-gred\"\n            style={{ color: \"#D2691E\" }}\n          >\n            <h2>\n              <b>LIST OF TRAINS AVAILABLE</b>\n            </h2>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"table-responsive \">\n            <table class=\"table table-striped table-hover table-bordered\">\n              <thead>\n                <tr>\n                  <th>TrainNo </th>\n                  <th>TrainName </th>\n                  <th>SourceStation </th>\n                  <th>DestinationStation </th>\n                  <th>ArrivalTime </th>\n                  <th>DepartureTime </th>\n                  <th>Duration </th>\n                  <th>NoOfSeats </th>\n                  <th>FirstClass </th>\n                  <th>SecondClass </th>\n                  <th>ThirdClass </th>\n                  <th>Sleeper </th>\n                  <th>Actions </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Trains.map((TrainDetails) => (\n                  <tr key={TrainDetails.trainNo}>\n                    <td> {TrainDetails.trainNo} </td>\n                    <td> {TrainDetails.trainName} </td>\n                    <td> {TrainDetails.sourceStation} </td>\n                    <td>{TrainDetails.destinationStation}</td>\n                    <td>{TrainDetails.arrivalTime}</td>\n                    <td>{TrainDetails.deptTime}</td>\n                    <td>{TrainDetails.duration}</td>\n                    <td>{TrainDetails.noOfSeats}</td>\n                    <td> {TrainDetails.firstClassACFare} </td>\n                    <td> {TrainDetails.twoTierAcFare} </td>\n                    <td> {TrainDetails.threeTierAcFare} </td>\n                    <td> {TrainDetails.sleeperFare} </td>\n                    <td>\n                      {\" \"}\n                   <Link className=\"btn btn-info\" to=\"/booking\">\n                   {\" \"}\n                   Book{\" \"}\n                   </Link>\n                    </td>\n                  </tr>\n                ))}\n                \n              </tbody>\n            </table>\n            <ToastContainer/>\n          </div>\n        </div>\n\n        {/* <!--- Model Box ---> */}\n        <div className=\"model_box\">\n          <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n            </Modal.Header>\n            <Modal.Body>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          {/* Model Box Finish*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookingList; ","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\UserLogin.js",["114","115","116","117","118","119","120"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component, useContext, useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport \"./UserLogin.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure()\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"username is required!\"),\n});\n\nconst UserLogin = () => {\n\n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success(\"User LoggedIn Successfully!!!\", {\n      position: \"top-center\",\n      autoClose: 2000,\n    });\n  };\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n  const fromUrl = _get(location, \"state.from.pathname\");\n  const signInSuccess = (userData) => {\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/search\");\n    }\n  };\n\n  const login = (userData) => {\n    fetch(\"http://localhost:8682/auth\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({\n        username: userData.username,\n        password: userData.password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(\"your userId and password is not correct\");\n        } else {\n          const userData = {\n            token: response,\n            name: username,\n          };\n          signInSuccess(userData);\n          console.log(response);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <Formik\n    initialValues={{\n      username: \"\",\n      password: \"\",\n    }}\n    validationSchema={LoginSchema}\n    onSubmit={async (values, { resetForm }) => {\n      try {\n        const userData = { ...values };\n        resetForm();\n        notify();\n        login(userData);\n      } catch (err) {\n        console.error(err);\n      }\n    }}\n  >\n    {() => (\n      <Form>\n         <div className=\"user-container\">\n         <h1 className=\"user\">USER LOGIN</h1>\n         <hr></hr>\n          <div className=\"inner\">\n            <label><b>User Name</b></label>\n            <Field name=\"username\" type=\"text\" placeholder=\"Enter username\" />\n            <label><b>Password</b></label>\n            <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n            <button\n              className=\"btn btn-success\"\n              type=\"submit\"\n              onClick={() => {}}\n            >\n              Login\n            </button>\n          </div>\n        </div>\n      </Form>\n    )}\n  </Formik>\n);\n};\n\nexport default UserLogin;\n","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\components\\PaymentForm.js",["121","122"],"import React, { useState} from 'react'\nimport PaymentService from '../Services/PaymentService'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\n\nconst PaymentForm = () => {\n\n    const [pnrNo, setpnrNo] = useState('')\n    const [bankName, setbankName] = useState('')\n    const [cardNo, setcardNo] = useState('')\n    const [cvv, setcvv] = useState('')\n    const [classType, setclassType] = useState('')\n    const history = useHistory();\n\n    const makePayment = (e) => {\n        e.preventDefault();\n        const PaymentDetails = { pnrNo,bankName,cardNo,cvv,classType}\n        \n            PaymentService.makePayment(PaymentDetails).then((response) => {\n               var e = JSON.stringify(response.data);\n                alert(e);\n                console.log(response);\n                history.push('/paymentSucessful')\n            }).catch(error => {\n                console.log(error)\n            })\n    \n    \n    }\n        return (\n            <div>\n      <br></br>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n          <br></br><br></br>\n            <h2 className=\"text-center\">Payment</h2>\n            <div className=\"card-body\">\n              <form>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">PNR NO</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter PNR No\"\n                    name=\"pnrNo\"\n                    className=\"form-control\"\n                    value={pnrNo}\n                    onChange={(e) => setpnrNo(e.target.value)}>\n                  </input>\n\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">BankName</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Bank Name\"\n                    name=\"bankName\"\n                    className=\"form-control\"\n                    value={bankName}\n                    onChange={(e) => setbankName(e.target.value)}>\n                  </input>\n\n                </div>\n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">Card No</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter card No\"\n                    name=\"cardNo\"\n                    className=\"form-control\"\n                    value={cardNo}\n                    onChange={(e) => setcardNo(e.target.value)}>\n                  </input>\n\n                </div>\n               \n                <div className=\"form-group mb-2\">\n                  <label className=\"form-label\">CVV</label>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter cvv\"\n                    name=\"cvv\"\n                    className=\"form-control\"\n                    value={cvv}\n                    onChange={(e) => setcvv(e.target.value)}>\n                  </input>\n\n                </div>\n\n                <Link className=\"btn btn-success\" onClick={(e) => makePayment(e)} >Pay</Link>\n                <button to=\"/login\" className=\"btn btn-danger\"> Cancel </button>\n              </form>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n      <br></br>\n    </div>\n        )\n    \n}\nexport default PaymentForm\n","C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\Services\\SearchService.js",[],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\Services\\PaymentService.js",[],"C:\\Users\\User\\Desktop\\CaseStudy_Railway_Reservation_System-master\\railway-reservation-system\\src\\Services\\BookService.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":17,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":2,"column":28,"nodeType":"129","messageId":"130","endLine":2,"endColumn":38},{"ruleId":"127","severity":1,"message":"132","line":2,"column":50,"nodeType":"129","messageId":"130","endLine":2,"endColumn":58},{"ruleId":"127","severity":1,"message":"133","line":37,"column":20,"nodeType":"129","messageId":"130","endLine":37,"endColumn":31},{"ruleId":"127","severity":1,"message":"134","line":38,"column":10,"nodeType":"129","messageId":"130","endLine":38,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":38,"column":20,"nodeType":"129","messageId":"130","endLine":38,"endColumn":31},{"ruleId":"127","severity":1,"message":"136","line":13,"column":9,"nodeType":"129","messageId":"130","endLine":13,"endColumn":15},{"ruleId":"127","severity":1,"message":"137","line":3,"column":27,"nodeType":"129","messageId":"130","endLine":3,"endColumn":36},{"ruleId":"127","severity":1,"message":"138","line":18,"column":13,"nodeType":"129","messageId":"130","endLine":18,"endColumn":14},{"ruleId":"127","severity":1,"message":"139","line":29,"column":9,"nodeType":"129","messageId":"130","endLine":29,"endColumn":19},{"ruleId":"127","severity":1,"message":"136","line":12,"column":9,"nodeType":"129","messageId":"130","endLine":12,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":88,"column":6,"nodeType":"142","endLine":88,"endColumn":8,"suggestions":"143"},{"ruleId":"127","severity":1,"message":"144","line":2,"column":22,"nodeType":"129","messageId":"130","endLine":2,"endColumn":31},{"ruleId":"127","severity":1,"message":"145","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":16},{"ruleId":"127","severity":1,"message":"146","line":4,"column":18,"nodeType":"129","messageId":"130","endLine":4,"endColumn":23},{"ruleId":"127","severity":1,"message":"147","line":4,"column":25,"nodeType":"129","messageId":"130","endLine":4,"endColumn":30},{"ruleId":"127","severity":1,"message":"136","line":13,"column":9,"nodeType":"129","messageId":"130","endLine":13,"endColumn":15},{"ruleId":"127","severity":1,"message":"148","line":19,"column":14,"nodeType":"129","messageId":"130","endLine":19,"endColumn":19},{"ruleId":"127","severity":1,"message":"149","line":32,"column":17,"nodeType":"129","messageId":"130","endLine":32,"endColumn":25},{"ruleId":"127","severity":1,"message":"150","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":20},{"ruleId":"127","severity":1,"message":"147","line":4,"column":25,"nodeType":"129","messageId":"130","endLine":4,"endColumn":30},{"ruleId":"127","severity":1,"message":"136","line":13,"column":9,"nodeType":"129","messageId":"130","endLine":13,"endColumn":15},{"ruleId":"127","severity":1,"message":"151","line":36,"column":9,"nodeType":"129","messageId":"130","endLine":36,"endColumn":20},{"ruleId":"127","severity":1,"message":"139","line":51,"column":9,"nodeType":"129","messageId":"130","endLine":51,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":2,"column":17,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":2,"column":28,"nodeType":"129","messageId":"130","endLine":2,"endColumn":38},{"ruleId":"127","severity":1,"message":"132","line":2,"column":50,"nodeType":"129","messageId":"130","endLine":2,"endColumn":58},{"ruleId":"127","severity":1,"message":"152","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":14},{"ruleId":"127","severity":1,"message":"133","line":29,"column":20,"nodeType":"129","messageId":"130","endLine":29,"endColumn":31},{"ruleId":"127","severity":1,"message":"134","line":30,"column":10,"nodeType":"129","messageId":"130","endLine":30,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":30,"column":20,"nodeType":"129","messageId":"130","endLine":30,"endColumn":31},{"ruleId":"127","severity":1,"message":"144","line":3,"column":22,"nodeType":"129","messageId":"130","endLine":3,"endColumn":31},{"ruleId":"127","severity":1,"message":"153","line":12,"column":23,"nodeType":"129","messageId":"130","endLine":12,"endColumn":35},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Fragment' is defined but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'notify' is assigned a value but never used.","'useEffect' is defined but never used.","'e' is assigned a value but never used.","'handleShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'trainNo'. Either include it or remove the dependency array.","ArrayExpression",["156"],"'useParams' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Input' is defined but never used.","'setid' is assigned a value but never used.","'setpnrNo' is assigned a value but never used.","'userregister' is defined but never used.","'deleteTrain' is assigned a value but never used.","'Link' is defined but never used.","'setclassType' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},"Update the dependencies array to be: [trainNo]",{"range":"159","text":"160"},[2890,2892],"[trainNo]"]